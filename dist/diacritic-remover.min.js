/**
 * @marketto/diacritic-remover 1.0.4
 * Copyright (c) 2019, Marco Ricupero <marco.ricupero@gmail.com>
 * License: MIT
 * ============================================================
 * I18N_ALL use material from Wikipedia
 * Article: https://en.wikipedia.org/wiki/Diacritic
 * License: CC-BY-SA 3.0
 */
"use strict";function isString(e){return"string"==typeof e}class DiacriticAbstractHandler{get(e,i,r){return isString(i)&&i.length<=1?this.diacriticTrap(e,i):Reflect.get(e,i,r)}diacriticTrap(e,i){return i}}class DiacriticInsensitiveMatcherHandler extends DiacriticAbstractHandler{diacriticTrap(e,i){const r=super.diacriticTrap(e,i).toLowerCase(),t=new Set([r,r.toUpperCase()]);return[...e.dictionary[r]||""].forEach(e=>{t.add(e),t.add(e.toUpperCase())}),[...t].sort().join("")}}class DiacriticInsensitiveValidatorHandler extends DiacriticAbstractHandler{diacriticTrap(e,i){return super.diacriticTrap(e,i),new RegExp(`[${i}${e.insensitiveMatcher[i]||""}]`,"ui")}}class DiacriticMatcherHandler extends DiacriticAbstractHandler{diacriticTrap(e,i){let r=super.diacriticTrap(e,i);const t=e.dictionary[i.toLowerCase()];return t&&(r+=e.isUpperCase(r)?t.toUpperCase():t),r}}class DiacriticValidatorHandler extends DiacriticAbstractHandler{diacriticTrap(e,i){super.diacriticTrap(e,i);const r=e.dictionary[i.toLowerCase()];let t="";return r&&(t=e.isUpperCase(i)?r.toUpperCase():r),new RegExp(`[${i}${t}]`,"u")}}class DiacriticMapperCore{constructor(e){const i=e.reduce((e,i)=>Object.entries(i).reduce((e,[i,r])=>Object.assign(Object.assign({},e),{[i]:(e[i]||"")+r}),e),{});Object.entries(i).forEach(([e,r])=>{i[e]=[...new Set([...r])].sort().join("")}),this.dictionary=Object.freeze(i),this.matcher=new Proxy(this,new DiacriticMatcherHandler),this.insensitiveMatcher=new Proxy(this,new DiacriticInsensitiveMatcherHandler),this.validator=new Proxy(this,new DiacriticValidatorHandler),this.insensitiveValidator=new Proxy(this,new DiacriticInsensitiveValidatorHandler)}matcherBy(e){return[...Object.entries(this.dictionary).filter(([i,r])=>r&&e.test(i)).map(([e,i])=>e+i),...Object.entries(this.dictionary).filter(([i,r])=>r&&e.test(i.toUpperCase())).map(([e,i])=>(e+i).toUpperCase())].join("")}replace(e){return e.replace(/./g,e=>this[e])}isUpperCase(e=""){return e.toUpperCase()===e}isLowerCase(e=""){return e.toLowerCase()===e}}class DiacriticRemoverHandler extends DiacriticAbstractHandler{diacriticTrap(e,i){super.diacriticTrap(e,i);const r=e.isUpperCase(i),t=i.toLowerCase(),[a]=Object.entries(e.dictionary).find(([,e])=>isString(e)&&e.includes(t))||[];return r&&a?a.toUpperCase():isString(a)?a:i}}var I18N_ALL={"":"ʰ'ʼ·׳",a:"áäâàåÄąāãă",ae:"æ",c:"çčćĉĊ",d:"đďðḏ",e:"éèêëěÊęėēё",g:"ğĝǧģĠġ",h:"ḥĥȟħ",i:"íîïi̇řìįī",ii:"î",ij:"ĳ",j:"ĵ",k:"ķ",l:"ḷŀłļĺľ",n:"ñňŋņń",o:"óôöòøōõơ",oe:"œ",r:"ŕ",s:"şšŝṣșſś",ss:"ß",t:"ťțțṭ",u:"úûüùůŭųūư",w:"ẅŵẃẁ",y:"ýÿŷỳ",z:"žŻźż","α":"ά","ε":"έ","η":"ή","ι":"ίΐϊ","ο":"ό","υ":"ύΰϋ","ω":"ώ","г":"ѓґ","е":"ё","и":"йѝ","к":"ќ","у":"ў","і":"ї"};class DiacriticRemover extends DiacriticMapperCore{constructor(...e){return super(e.length?e:[I18N_ALL]),Object.defineProperty(this,"dictionary",{configurable:!1,enumerable:!1}),new Proxy(this,new DiacriticRemoverHandler)}}module.exports=DiacriticRemover;
//# sourceMappingURL=diacritic-remover.min.js.map
