/**
 * @marketto/diacritic-remover 1.0.5
 * Copyright (c) 2019, Marco Ricupero <marco.ricupero@gmail.com>
 * License: MIT
 */
var DiacriticRemover=function(){"use strict";function e(e){return"string"==typeof e}class t{constructor(){this.LOWERCASE_MARKER_MATCHER="\\p{Mark}",this.UPPERCASE_MARKER_MATCHER="\\P{Mark}",this.MARKER_REGEXP=new RegExp(`(${this.LOWERCASE_MARKER_MATCHER})`,"gui")}get(t,r,i){if(e(r)){const e=r;if(e.length<=1)return this.diacriticTrap(t,e)}return Reflect.get(t,r,i)||Reflect.get(this,r)}diacriticTrap(e,t){return t.replace(this.MARKER_REGEXP,"")}}class r extends t{diacriticTrap(e,t){const r=super.diacriticTrap(e,t).toLowerCase(),i=e.dictionary[r]||"";return[...new Set([r,r.toUpperCase(),...i,...i.toUpperCase()])].sort().join("")}}class i extends t{diacriticTrap(e,t){const r=super.diacriticTrap(e,t),i=e.dictionary[t.toLowerCase()]||r;if(!r&&!i)return this.MARKER_REGEXP;let s,n;return e.isUpperCase(r)?(s=i.toUpperCase(),n=this.UPPERCASE_MARKER_MATCHER):(s=i,n=this.LOWERCASE_MARKER_MATCHER),new RegExp(`[${r}${s}](?:${n})*`,"u")}}class s extends i{diacriticTrap(e,t){const{source:r}=super.diacriticTrap(e,t);return new RegExp(r,"ui")}}class n extends t{diacriticTrap(e,t){let r=super.diacriticTrap(e,t);const i=e.dictionary[t.toLowerCase()];return i&&(r+=e.isUpperCase(r)?i.toUpperCase():i),r}}class c{constructor(t){const c=t.reduce((e,t)=>Object.entries(t).reduce((e,[t,r])=>Object.assign(Object.assign({},e),{[t]:(e[t]||"")+r}),e),{});Object.entries(c).forEach(([t,r])=>{e(r)&&(c[t]=[...new Set([...r])].sort().join(""))}),this.dictionary=Object.freeze(c),this.matcher=new Proxy(this,new n),this.insensitiveMatcher=new Proxy(this,new r),this.validator=new Proxy(this,new i),this.insensitiveValidator=new Proxy(this,new s)}matcherBy(e){return[...Object.entries(this.dictionary).filter(([t,r])=>r&&e.test(t)).map(([e,t])=>e+t),...Object.entries(this.dictionary).filter(([t,r])=>r&&e.test(t.toUpperCase())).map(([e,t])=>(e+t).toUpperCase())].join("")}replace(e){return e.replace(/./g,e=>this[e])}isUpperCase(e=""){return e.toLowerCase()!==e}isLowerCase(e=""){return e.toUpperCase()!==e}}class a extends t{diacriticTrap(t,r){const i=super.diacriticTrap(t,r);if(!i.trim()||1!==i.length)return i;const s=i.toLowerCase(),[n]=Object.entries(t.dictionary).find(([t,r])=>e(r)&&[t,...r].includes(s))||[i];return t.isUpperCase(i)?n.toUpperCase():n}}return class extends c{constructor(...e){return super(e),Object.defineProperty(this,"dictionary",{configurable:!1,enumerable:!1}),new Proxy(this,new a)}}}();
//# sourceMappingURL=diacritic-remover.bundle.min.js.map
