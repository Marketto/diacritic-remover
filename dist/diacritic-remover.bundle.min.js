/**
 * @marketto/diacritic-remover 1.0.5
 * Copyright (c) 2019, Marco Ricupero <marco.ricupero@gmail.com>
 * License: MIT
 * ============================================================
 * I18N_ALL use material from Wikipedia
 * Article: https://en.wikipedia.org/wiki/Diacritic
 * License: CC-BY-SA 3.0
 */
var DiacriticRemover=function(){"use strict";function e(e){return"string"==typeof e}class r{get(r,t,i){return e(t)&&t.length<=1?this.diacriticTrap(r,t):Reflect.get(r,t,i)}diacriticTrap(e,r){return r}}class t extends r{diacriticTrap(e,r){const t=super.diacriticTrap(e,r).toLowerCase(),i=new Set([t,t.toUpperCase()]);return[...e.dictionary[t]||""].forEach(e=>{i.add(e),i.add(e.toUpperCase())}),[...i].sort().join("")}}class i extends r{diacriticTrap(e,r){return super.diacriticTrap(e,r),new RegExp(`[${r}${e.insensitiveMatcher[r]||""}]`,"ui")}}class s extends r{diacriticTrap(e,r){let t=super.diacriticTrap(e,r);const i=e.dictionary[r.toLowerCase()];return i&&(t+=e.isUpperCase(t)?i.toUpperCase():i),t}}class a extends r{diacriticTrap(e,r){super.diacriticTrap(e,r);const t=e.dictionary[r.toLowerCase()];let i="";return t&&(i=e.isUpperCase(r)?t.toUpperCase():t),new RegExp(`[${r}${i}]`,"u")}}class n{constructor(e){const r=e.reduce((e,r)=>Object.entries(r).reduce((e,[r,t])=>Object.assign(Object.assign({},e),{[r]:(e[r]||"")+t}),e),{});Object.entries(r).forEach(([e,t])=>{r[e]=[...new Set([...t])].sort().join("")}),this.dictionary=Object.freeze(r),this.matcher=new Proxy(this,new s),this.insensitiveMatcher=new Proxy(this,new t),this.validator=new Proxy(this,new a),this.insensitiveValidator=new Proxy(this,new i)}matcherBy(e){return[...Object.entries(this.dictionary).filter(([r,t])=>t&&e.test(r)).map(([e,r])=>e+r),...Object.entries(this.dictionary).filter(([r,t])=>t&&e.test(r.toUpperCase())).map(([e,r])=>(e+r).toUpperCase())].join("")}replace(e){return e.replace(/./g,e=>this[e])}isUpperCase(e=""){return e.toUpperCase()===e}isLowerCase(e=""){return e.toLowerCase()===e}}class c extends r{diacriticTrap(r,t){super.diacriticTrap(r,t);const i=r.isUpperCase(t),s=t.toLowerCase(),[a]=Object.entries(r.dictionary).find(([,r])=>e(r)&&r.includes(s))||[];return i&&a?a.toUpperCase():e(a)?a:t}}var o={"":"ʰ'ʼ·׳",a:"áäâàåÄąāãă",ae:"æ",c:"çčćĉĊ",d:"đďðḏ",e:"éèêëěÊęėēё",g:"ğĝǧģĠġ",h:"ḥĥȟħ",i:"íîïi̇řìįī",ii:"î",ij:"ĳ",j:"ĵ",k:"ķ",l:"ḷŀłļĺľ",n:"ñňŋņń",o:"óôöòøōõơ",oe:"œ",r:"ŕ",s:"şšŝṣșſś",ss:"ß",t:"ťțțṭ",u:"úûüùůŭųūư",w:"ẅŵẃẁ",y:"ýÿŷỳ",z:"žŻźż","α":"ά","ε":"έ","η":"ή","ι":"ίΐϊ","ο":"ό","υ":"ύΰϋ","ω":"ώ","г":"ѓґ","е":"ё","и":"йѝ","к":"ќ","у":"ў","і":"ї"};return class extends n{constructor(...e){return super(e.length?e:[o]),Object.defineProperty(this,"dictionary",{configurable:!1,enumerable:!1}),new Proxy(this,new c)}}}();
//# sourceMappingURL=diacritic-remover.bundle.min.js.map
