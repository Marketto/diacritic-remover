{"version":3,"file":"diacritic-remover.js","sources":["../src/classes/diacritic-abstract-handler.class.ts","../src/classes/diacritic-insensitive-matcher-handler.class.ts","../src/classes/diacritic-validator-handler.class.ts","../src/classes/diacritic-insensitive-validator-handler.class.ts","../src/classes/diacritic-matcher-handler.class.ts","../src/classes/diacritic-mapper-core.class.ts","../node_modules/rollup-plugin-node-builtins/src/es6/util.js","../src/classes/diacritic-remover-handler.class.ts","../src/classes/diacritic-remover.class.ts"],"sourcesContent":["import IDiacriticMapper from \"../interfaces/diacritic-mapper.interface\";\n\nabstract class DiacriticAbstractHandler implements ProxyHandler<IDiacriticMapper> {\n    protected LOWERCASE_MARKER_MATCHER: string = \"\\\\p{M}\";\n    protected UPPERCASE_MARKER_MATCHER: string = \"\\\\P{M}\";\n    protected MARKER_REGEXP: RegExp = new RegExp(`(${this.LOWERCASE_MARKER_MATCHER})`, \"gui\");\n\n    public get(target: IDiacriticMapper, prop: string, receiver: any): any {\n      if (prop.length <= 1) {\n        return this.diacriticTrap(target, prop);\n      }\n      return Reflect.get(target, prop, receiver);\n    }\n\n    protected diacriticTrap(target: IDiacriticMapper, char: string): any {\n        return char.replace(this.MARKER_REGEXP, \"\");\n    }\n}\n\nexport default DiacriticAbstractHandler;\n","import IDiacriticMapper from \"../interfaces/diacritic-mapper.interface\";\nimport DiacriticAbstractHandler from \"./diacritic-abstract-handler.class\";\n\nclass DiacriticInsensitiveMatcherHandler extends DiacriticAbstractHandler {\n    protected diacriticTrap(target: IDiacriticMapper, char: string): string {\n        const lowerCaseChar = super.diacriticTrap(target, char).toLowerCase();\n        const lowerCaseDiacritics = target.dictionary[lowerCaseChar] || \"\";\n\n        const insensitiveMatcher = new Set<string>([\n            lowerCaseChar,\n            lowerCaseChar.toUpperCase(),\n            ...lowerCaseDiacritics,\n            ...lowerCaseDiacritics.toUpperCase(),\n        ]);\n\n        return [...insensitiveMatcher].sort().join(\"\");\n    }\n}\n\nexport default DiacriticInsensitiveMatcherHandler;\n","import IDiacriticMapper from \"../interfaces/diacritic-mapper.interface\";\nimport DiacriticAbstractHandler from \"./diacritic-abstract-handler.class\";\n\nclass DiacriticValidatorHandler extends DiacriticAbstractHandler {\n    protected diacriticTrap(target: IDiacriticMapper, char: string): RegExp {\n        const cleanChar = super.diacriticTrap(target, char);\n        const diacritics = target.dictionary[char.toLowerCase()] || \"\";\n        let charMatcher = \"\";\n        let markerMatcher = \"\";\n        if (cleanChar || diacritics) {\n            charMatcher = `[${cleanChar}${diacritics}]`;\n            markerMatcher = `(?:[${this.LOWERCASE_MARKER_MATCHER}${this.UPPERCASE_MARKER_MATCHER}]*)`;\n            if (target.isUpperCase(cleanChar)) {\n                charMatcher = charMatcher.toUpperCase();\n            }\n        }\n        return new RegExp(`^${charMatcher}${markerMatcher}$`, \"u\");\n    }\n}\n\nexport default DiacriticValidatorHandler;\n","import IDiacriticMapper from \"../interfaces/diacritic-mapper.interface\";\nimport DiacriticValidatorHandler from \"./diacritic-validator-handler.class\";\n\nclass DiacriticInsensitiveValidatorHandler extends DiacriticValidatorHandler {\n    protected diacriticTrap(target: IDiacriticMapper, char: string): RegExp {\n        const { source } = super.diacriticTrap(target, char);\n        return new RegExp(source, \"ui\");\n    }\n}\n\nexport default DiacriticInsensitiveValidatorHandler;\n","import IDiacriticMapper from \"../interfaces/diacritic-mapper.interface\";\nimport DiacriticAbstractHandler from \"./diacritic-abstract-handler.class\";\n\nclass DiacriticMatcherHandler extends DiacriticAbstractHandler {\n    protected diacriticTrap(target: IDiacriticMapper, char: string): string {\n        let matcher = super.diacriticTrap(target, char);\n\n        const diacritics = target.dictionary[char.toLowerCase()];\n        if (diacritics) {\n            matcher += target.isUpperCase(matcher) ? diacritics.toUpperCase() : diacritics;\n        }\n        return matcher;\n    }\n}\n\nexport default DiacriticMatcherHandler;\n","import { isString, isUndefined } from \"util\";\nimport IDiacriticMapper from \"../interfaces/diacritic-mapper.interface\";\nimport IDiacriticSet from \"../interfaces/diacritic-set.interface\";\nimport IDiacriticValidatorSet from \"../interfaces/diacritic-validator-set.interface\";\nimport DiacriticInsensitiveMatcherHandler from \"./diacritic-insensitive-matcher-handler.class\";\nimport DiacriticInsensitiveValidatorHandler from \"./diacritic-insensitive-validator-handler.class\";\nimport DiacriticMatcherHandler from \"./diacritic-matcher-handler.class\";\nimport DiacriticValidatorHandler from \"./diacritic-validator-handler.class\";\n\nclass DiacriticMapperCore implements IDiacriticMapper {\n\n    [key: string]: any;\n\n    public dictionary: IDiacriticSet;\n    public matcher: IDiacriticSet;\n\n    public insensitiveMatcher: IDiacriticSet;\n\n    public validator: IDiacriticValidatorSet;\n\n    public insensitiveValidator: IDiacriticValidatorSet;\n\n    public constructor(dictionary: IDiacriticSet = {}) {\n        this.dictionary = dictionary;\n        this.matcher = new Proxy(this, new DiacriticMatcherHandler());\n        this.insensitiveMatcher = new Proxy(this, new DiacriticInsensitiveMatcherHandler());\n        this.validator = new Proxy(this, new DiacriticValidatorHandler());\n        this.insensitiveValidator = new Proxy(this, new DiacriticInsensitiveValidatorHandler());\n    }\n\n    public matcherBy(regexp: RegExp): string {\n        const lowerCase = Object.entries(this.dictionary)\n            .filter(([key, value]) => value && regexp.test(key))\n            .map(([char , value]) => char + value);\n\n        const upperCase = Object.entries(this.dictionary)\n            .filter(([key, value]) => value && regexp.test(key.toUpperCase()))\n            .map(([char , value]) => (char + value).toUpperCase());\n\n        return [...lowerCase, ...upperCase].join(\"\");\n    }\n\n    public replace(text: string): string {\n        return text.replace(/./g, (char: string) => this[char]);\n    }\n\n    /**\n     * Check if the given string is uppercase\n     *\n     * @param {string} [text=''] string to check\n     * @returns {boolean} true if text is uppercase\n     * @memberof DiacriticMapperCore\n     */\n    public isUpperCase(text: string = \"\"): boolean {\n        return text.toLowerCase() !== text;\n    }\n\n    /**\n     * Check if the given string is lowercase\n     *\n     * @param {string} [text=''] string to check\n     * @returns {boolean} true if text is lowercase\n     * @memberof DiacriticMapperCore\n     */\n    public isLowerCase(text: string = \"\"): boolean {\n        return text.toUpperCase() !== text;\n    }\n}\n\nexport default DiacriticMapperCore;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","import { isString } from \"util\";\nimport IDiacriticMapper from \"../interfaces/diacritic-mapper.interface\";\nimport DiacriticAbstractHandler from \"./diacritic-abstract-handler.class\";\n\nclass DiacriticRemoverHandler extends DiacriticAbstractHandler {\n    protected diacriticTrap(target: IDiacriticMapper, char: string): string {\n        const cleanChar = super.diacriticTrap(target, char);\n        if (!cleanChar.trim() || cleanChar.length !== 1) {\n            return cleanChar;\n        }\n        const lowerCaseChar = cleanChar.toLowerCase();\n\n        const [plainChar] = Object.entries(target.dictionary)\n            .find(([letter, diacritics]) => isString(diacritics) &&\n                [letter, ...diacritics].includes(lowerCaseChar)) || [cleanChar];\n\n        return target.isUpperCase(cleanChar) ?\n            plainChar.toUpperCase() :\n            plainChar;\n    }\n}\n\nexport default DiacriticRemoverHandler;\n","import IDiacriticSet from \"../interfaces/diacritic-set.interface\";\nimport DiacriticMapperCore from \"./diacritic-mapper-core.class\";\nimport DiacriticRemoverHandler from \"./diacritic-remover-handler.class\";\n\nimport i18nGlobal from \"../../dictionaries/i18n/global.json\";\nimport LATIN_DICT from \"../../dictionaries/latin.json\";\n\nclass DiacriticRemover extends DiacriticMapperCore {\n    [letter: string]: string|any;\n\n    constructor(...dictionaries: IDiacriticSet[]) {\n        super();\n        const mergedDictionaries = Object.freeze(\n            (dictionaries.length ? dictionaries : [LATIN_DICT, i18nGlobal])\n            .reduce((\n                    dictMerge: Array<[string, string]>,\n                    currentDict: IDiacriticSet,\n                ) => [...dictMerge, ...Object.entries(currentDict)],\n                [] as Array<[string, string]>)\n            .reduce((\n                    accumulator: Array<[string, string[]]>,\n                    [letter, diacritics],\n                ) => {\n                    let targetSet = accumulator.find(([ targetLetter ]) => targetLetter === letter);\n                    if (!targetSet) {\n                        targetSet = [letter, []];\n                        accumulator.push(targetSet);\n                    }\n                    targetSet[1] = [...targetSet[1], ...diacritics];\n                    return accumulator;\n                },\n                [] as Array<[string, string[]]>)\n            .reduce((\n                    accumulator: IDiacriticSet,\n                    [letter, diacritics],\n                ) => ({\n                    ...accumulator,\n                    [letter]: [...(new Set(diacritics))].sort().join(\"\"),\n                }), {}));\n        Object.defineProperty(this, \"dictionary\", {\n            configurable: false,\n            enumerable: false,\n            value: mergedDictionaries,\n        });\n        return new Proxy(this, new DiacriticRemoverHandler());\n    }\n}\nexport default DiacriticRemover;\n"],"names":[],"mappings":"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"}